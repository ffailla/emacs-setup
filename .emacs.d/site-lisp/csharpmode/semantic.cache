;; Object csharpmode-read-only/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "csharpmode-read-only/"
  :tables (list 
   (semanticdb-table "csharp-mode.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cc-mode" include nil nil [7109 7127]) ("message" code nil nil [7129 7174]) ("c-filter-ops" function (:arguments ("ops" "opgroup-filter" "op-filter" "&optional" "xlate")) nil [7468 8756]) ("let" code nil nil [9071 9373]) ("c-add-language" code nil nil [9632 9672]) ("csharp-at-vsemi-p" function (:arguments ("&optional" "pos")) nil [10031 12019]) ("csharp-lineup-region" function (:arguments ("langelem")) nil [12024 12507]) ("csharp-lineup-if-and-region" function (:arguments ("langelem")) nil [12511 13031]) ("csharp-insert-open-brace" function (:user-visible-flag t) nil [13037 17492]) ("csharp-aspnet-directive-re" variable (:constant-flag t :default-value "<%@.+?%>") nil [18433 18562]) ("csharp-enum-decl-re" variable (:constant-flag t :default-value (concat "\\<enum[ 	
]+" "\\([[:alpha:]_][[:alnum:]_]*\\)" "[ 	
]*" "\\(:[ 	
]*" "\\(" (c-make-keywords-re nil (list "sbyte" "byte" "short" "ushort" "int" "uint" "long" "ulong")) "\\)" "\\)?")) nil [18564 18894]) ("c-lang-defconst" code nil nil [19139 19200]) ("c-lang-defconst" code nil nil [19508 19651]) ("c-lang-defconst" code nil nil [26200 29492]) ("c-lang-defconst" code nil nil [29496 53921]) ("c-lang-defconst" code nil nil [54067 54119]) ("c-lang-defconst" code nil nil [54123 54471]) ("c-lang-defconst" code nil nil [54629 54686]) ("c-lang-defconst" code nil nil [55028 55085]) ("c-lang-defconst" code nil nil [55129 55184]) ("c-lang-defconst" code nil nil [55186 55242]) ("c-lang-defconst" code nil nil [55244 55302]) ("c-lang-defconst" code nil nil [55425 55487]) ("c-lang-defconst" code nil nil [55490 55550]) ("c-lang-defconst" code nil nil [55552 55751]) ("c-lang-defconst" code nil nil [55754 55862]) ("c-lang-defconst" code nil nil [55864 56081]) ("c-lang-defconst" code nil nil [56172 56267]) ("c-lang-defconst" code nil nil [56462 56549]) ("c-lang-defconst" code nil nil [56628 56690]) ("c-lang-defconst" code nil nil [57280 57427]) ("c-lang-defconst" code nil nil [57539 57599]) ("c-lang-defconst" code nil nil [57670 57765]) ("c-lang-defconst" code nil nil [57849 58038]) ("c-lang-defconst" code nil nil [58223 58329]) ("c-lang-defconst" code nil nil [58401 58543]) ("c-lang-defconst" code nil nil [58629 58683]) ("c-lang-defconst" code nil nil [58918 58983]) ("c-lang-defconst" code nil nil [59074 59144]) ("c-lang-defconst" code nil nil [59222 59365]) ("c-lang-defconst" code nil nil [59407 59499]) ("c-lang-defconst" code nil nil [59543 59593]) ("c-lang-defconst" code nil nil [59616 59683]) ("c-lang-defconst" code nil nil [59731 59794]) ("c-lang-defconst" code nil nil [59871 59936]) ("c-lang-defconst" code nil nil [59938 60056]) ("c-lang-defconst" code nil nil [60058 60216]) ("c-lang-defconst" code nil nil [60659 61226]) ("csharp-font-lock-extra-types" variable (:user-visible-flag t) nil [61228 61446]) ("csharp-font-lock-keywords-1" variable (:constant-flag t :default-value (c-lang-const c-matchers-1 csharp)) nil [61448 61559]) ("csharp-font-lock-keywords-2" variable (:constant-flag t :default-value (c-lang-const c-matchers-2 csharp)) nil [61561 61676]) ("csharp-font-lock-keywords-3" variable (:constant-flag t :default-value (c-lang-const c-matchers-3 csharp)) nil [61678 61797]) ("csharp-font-lock-keywords" variable (:default-value csharp-font-lock-keywords-3) nil [61799 61910]) ("csharp-mode-syntax-table" variable nil nil [61912 61995]) ("or" code nil nil [61996 62128]) ("csharp-mode-abbrev-table" variable nil nil [62130 62219]) ("c-define-abbrev-table" code nil nil [62220 62657]) ("csharp-mode-map" variable (:default-value (let ((map (c-make-inherited-keymap))) map)) nil [62659 62856]) ("csharp-maybe-insert-codedoc" function (:user-visible-flag t :arguments ("arg")) nil [64082 74613]) ("csharp-log-level" variable nil nil [76445 76714]) ("csharp-log" function (:arguments ("level" "text" "&rest" "args")) nil [76716 77133]) ("csharp-max-beginning-of-stmt" function nil nil [77137 77814]) ("csharp-in-literal" function (:arguments ("&optional" "lim" "detect-cpp")) nil [77817 79157]) ("csharp-set-vliteral-syntax-table-properties" function (:arguments ("beg" "end")) nil [79160 82211]) ("csharp-end-of-verbatim-literal-string" function (:arguments ("&optional" "lim")) nil [82215 83683]) ("csharp-scan-for-verbatim-literals-and-set-props" function (:arguments ("&optional" "beg" "end")) nil [83688 90130]) ("csharp-before-font-lock" function (:arguments ("beg" "end" "old-len")) nil [90133 90933]) ("c-lang-defconst" code nil nil [90937 91016]) ("c-forward-objc-directive" function (:arguments ("around" "csharp-mode-advice-2" "compile" "activate")) nil [91462 91675]) ("c-looking-at-inexpr-block" function (:arguments ("lim" "containing-sexp" "&optional" "check-at-end")) nil [92365 97809]) ("c-inside-bracelist-p" function (:arguments ("containing-sexp" "paren-state")) nil [97815 105181]) ("add-to-list" code nil nil [105879 105935]) ("c-add-style" code nil nil [105939 108363]) ("csharp-mode-hook" variable (:user-visible-flag t) nil [108403 108496]) ("csharp-mode" function (:user-visible-flag t) nil [108549 111955]) ("message" code nil nil [111959 112009]) ("csharp-mode" package nil nil [112012 112034]))
    :file "csharp-mode.el"
    :pointmax 112065
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0beta3"
  :semanticdb-version "2.0beta3"
  )
